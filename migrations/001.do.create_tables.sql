BEGIN;

CREATE TYPE user_status AS ENUM (
    'admin',
    'user',
    'blocked'
);

CREATE TYPE participant_status AS ENUM (
    'going',
    'invited',
    'invite'
);

CREATE TABLE users (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_first_name TEXT NOT NULL,
    user_last_name TEXT NOT NULL,
    user_email TEXT UNIQUE NOT NULL,
    user_password TEXT NOT NULL,
    user_zipcode TEXT NOT NULL,
    user_employer TEXT,
    user_employer_address TEXT,
    user_no_of_followers TEXT NOT NULL DEFAULT 0,
    user_status user_status NOT NULL DEFAULT 'user',
    user_avatar TEXT,
    user_bio TEXT
);

CREATE TABLE events (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    event_name TEXT NOT NULL,
    event_description TEXT NOT NULL,
    event_location_name TEXT NOT NULL,
    event_address TEXT NOT NULL,
    event_date TEXT NOT NULL,
    event_time TEXT NOT NULL,
    event_host_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    event_no_of_participants INTEGER DEFAULT 0,
    event_cover_img TEXT NOT NULL
);

CREATE TABLE participants (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    event_id INTEGER REFERENCES events(id) ON DELETE CASCADE NOT NULL,
    participant_status participant_status 
);

CREATE TABLE followers (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    following_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL 
);

CREATE TABLE invites (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    event_id INTEGER REFERENCES events(id) ON DELETE CASCADE NOT NULL,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    sender_id INTEGER REFERENCES users(id) NOT NULL
);

CREATE TABLE bookmarks (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE NOT NULL,
    event_id INTEGER REFERENCES events(id) ON DELETE CASCADE NOT NULL 
);

COMMIT;